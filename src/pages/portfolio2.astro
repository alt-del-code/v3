---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';

type FabricationEntry = CollectionEntry<'fabrication'>;
type MaterialEntry = CollectionEntry<'materials'>;

const fabricationItems = await getCollection('fabrication');
const materialItems = await getCollection('materials');

// Sort items by date
const sortedFabrication = fabricationItems.sort((a, b) => 
  new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);

const sortedMaterials = materialItems.sort((a, b) => 
  new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);

const fabricationCategories = ['all', 'metal', 'structural', 'custom'];
const materialCategories = ['all', 'raw', 'processed', 'hardware'];
---

<Layout title="Portfolio - Fabrication & Materials | KrrishCo">
  <main class="min-h-screen bg-gradient-to-b from-gray-50 to-white">
    <!-- Hero Section -->
    <div class="relative bg-gradient-to-br from-blue-900 to-blue-700 text-white py-24">
      <div class="absolute inset-0 bg-black/20"></div>
      <div class="container mx-auto px-4 relative">
        <h1 
          class="text-5xl md:text-6xl font-bold text-center mb-6" 
          data-aos="fade-down"
        >
          Our Portfolio
        </h1>
        <p 
          class="text-xl text-center text-blue-100 max-w-3xl mx-auto" 
          data-aos="fade-up" 
          data-aos-delay="100"
        >
          Explore our comprehensive collection of fabrication projects and material solutions
        </p>
      </div>
    </div>

    <div class="container mx-auto px-4 py-16">
      <!-- Portfolio Navigation -->
      <div class="max-w-5xl mx-auto mb-16">
        <div 
          class="bg-white rounded-2xl shadow-lg p-2 flex flex-col md:flex-row gap-4"
          data-aos="fade-up"
        >
          <!-- Tab Buttons -->
          <div class="flex-1 flex justify-center">
            <div class="inline-flex bg-gray-100 rounded-xl p-1">
              <button 
                id="fab-tab"
                class="px-6 py-3 rounded-lg text-lg font-medium transition-all duration-300
                       data-[active=true]:bg-blue-500 data-[active=true]:text-white
                       data-[active=false]:text-gray-600 data-[active=false]:hover:text-blue-500"
                data-active="true"
              >
                Fabrication
              </button>
              <button 
                id="mat-tab"
                class="px-6 py-3 rounded-lg text-lg font-medium transition-all duration-300
                       data-[active=true]:bg-green-500 data-[active=true]:text-white
                       data-[active=false]:text-gray-600 data-[active=false]:hover:text-green-500"
                data-active="false"
              >
                Materials
              </button>
            </div>
          </div>

          <!-- Search Input -->
          <div class="flex-1">
            <div class="relative">
              <input 
                type="search" 
                id="portfolio-search"
                placeholder="Search projects..."
                class="w-full px-4 py-3 pl-12 rounded-xl border border-gray-200 
                       focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
              />
              <svg 
                class="absolute left-4 top-3.5 h-5 w-5 text-gray-400" 
                fill="none" 
                stroke="currentColor" 
                viewBox="0 0 24 24"
              >
                <path 
                  stroke-linecap="round" 
                  stroke-linejoin="round" 
                  stroke-width="2" 
                  d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" 
                />
              </svg>
            </div>
          </div>
        </div>
      </div>

      <!-- Category Filters -->
      <div class="max-w-5xl mx-auto mb-12 overflow-x-auto">
        <!-- Fabrication Filters -->
        <div 
          id="fab-filters" 
          class="flex justify-start md:justify-center gap-3 min-w-max px-4" 
          data-aos="fade-up"
        >
          {fabricationCategories.map(category => (
            <button
              class="category-filter px-6 py-2 rounded-full text-sm font-medium transition-all duration-300
                     shadow-sm hover:shadow-md
                     data-[active=true]:bg-blue-500 data-[active=true]:text-white
                     data-[active=false]:bg-white data-[active=false]:text-gray-600 data-[active=false]:hover:bg-blue-50"
              data-category={category}
              data-active={category === 'all'}
            >
              {category.charAt(0).toUpperCase() + category.slice(1)}
            </button>
          ))}
        </div>

        <!-- Material Filters -->
        <div 
          id="mat-filters" 
          class="hidden justify-start md:justify-center gap-3 min-w-max px-4" 
          data-aos="fade-up"
        >
          {materialCategories.map(category => (
            <button
              class="category-filter px-6 py-2 rounded-full text-sm font-medium transition-all duration-300
                     shadow-sm hover:shadow-md
                     data-[active=true]:bg-green-500 data-[active=true]:text-white
                     data-[active=false]:bg-white data-[active=false]:text-gray-600 data-[active=false]:hover:bg-green-50"
              data-category={category}
              data-active={category === 'all'}
            >
              {category.charAt(0).toUpperCase() + category.slice(1)}
            </button>
          ))}
        </div>
      </div>

      <!-- Portfolio Grid -->
      <div class="max-w-7xl mx-auto">
        <!-- Fabrication Projects -->
        <div 
          id="fabrication-section" 
          class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"
        >
          {sortedFabrication.map((item, index) => (
            <a 
              href={`/portfolio/${item.id.split('/').pop()}`}
              class="group"
              data-aos="fade-up"
              data-aos-delay={index * 100}
              data-category={item.data.category}
            >
              <article class="bg-white rounded-xl shadow-lg overflow-hidden transition-all duration-300 hover:shadow-xl">
                {item.data.image && (
                  <div class="aspect-video overflow-hidden">
                    <Image 
                      src={item.data.image}
                      alt={item.data.title}
                      class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
                      width={600}
                      height={400}
                    />
                  </div>
                )}
                <div class="p-6">
                  <div class="flex items-start justify-between mb-3">
                    <h3 class="text-xl font-semibold group-hover:text-blue-600 transition-colors line-clamp-2">
                      {item.data.title}
                    </h3>
                    <span class="px-3 py-1 text-sm font-medium text-blue-600 bg-blue-50 rounded-full whitespace-nowrap ml-2">
                      {item.data.category}
                    </span>
                  </div>
                  <p class="text-gray-600 mb-4 line-clamp-2">{item.data.description}</p>
                  <div class="flex items-center justify-between text-sm">
                    <time class="text-gray-500">
                      {new Date(item.data.date).toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'short'
                      })}
                    </time>
                    <span class="text-blue-600 font-medium group-hover:translate-x-1 transition-transform inline-flex items-center">
                      View Details
                      <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                      </svg>
                    </span>
                  </div>
                </div>
              </article>
            </a>
          ))}
        </div>

        <!-- Materials -->
        <div 
          id="materials-section" 
          class="hidden grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"
        >
          {sortedMaterials.map((item, index) => (
            <a 
              href={`/materials/${item.id.split('/').pop()}`}
              class="group"
              data-aos="fade-up"
              data-aos-delay={index * 100}
              data-category={item.data.category}
            >
              <article class="bg-white rounded-xl shadow-lg overflow-hidden transition-all duration-300 hover:shadow-xl">
                {item.data.image && (
                  <div class="aspect-video overflow-hidden">
                    <Image 
                      src={item.data.image}
                      alt={item.data.title}
                      class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
                      width={600}
                      height={400}
                    />
                  </div>
                )}
                <div class="p-6">
                  <div class="flex items-start justify-between mb-3">
                    <h3 class="text-xl font-semibold group-hover:text-green-600 transition-colors line-clamp-2">
                      {item.data.title}
                    </h3>
                    <span class="px-3 py-1 text-sm font-medium text-green-600 bg-green-50 rounded-full whitespace-nowrap ml-2">
                      {item.data.category}
                    </span>
                  </div>
                  <p class="text-gray-600 mb-4 line-clamp-2">{item.data.description}</p>
                  <div class="flex items-center justify-between text-sm">
                    <time class="text-gray-500">
                      {new Date(item.data.date).toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'short'
                      })}
                    </time>
                    <span class="text-green-600 font-medium group-hover:translate-x-1 transition-transform inline-flex items-center">
                      View Details
                      <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                      </svg>
                    </span>
                  </div>
                </div>
              </article>
            </a>
          ))}
        </div>

        <!-- No Results Message -->
        <div id="no-results" class="hidden text-center py-12">
          <svg class="w-16 h-16 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <h3 class="text-xl font-medium text-gray-900 mb-1">No items found</h3>
          <p class="text-gray-500">Try adjusting your search or filter criteria</p>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  let currentSection = document.getElementById('fabrication-section');
  let searchTimeout: ReturnType<typeof setTimeout>;

  // Tab switching
  document.getElementById('fab-tab')?.addEventListener('click', () => {
    switchTab('fabrication');
  });

  document.getElementById('mat-tab')?.addEventListener('click', () => {
    switchTab('materials');
  });

  function switchTab(type: 'fabrication' | 'materials') {
    const fabTab = document.getElementById('fab-tab');
    const matTab = document.getElementById('mat-tab');
    const fabSection = document.getElementById('fabrication-section');
    const matSection = document.getElementById('materials-section');
    const fabFilters = document.getElementById('fab-filters');
    const matFilters = document.getElementById('mat-filters');

    // Reset all filters to 'all' before switching
    document.querySelectorAll('.category-filter').forEach(btn => {
      btn.setAttribute('data-active', btn.getAttribute('data-category') === 'all' ? 'true' : 'false');
    });

    if (type === 'fabrication') {
      fabTab?.setAttribute('data-active', 'true');
      matTab?.setAttribute('data-active', 'false');
      fabSection?.classList.remove('hidden');
      matSection?.classList.add('hidden');
      fabFilters?.classList.remove('hidden');
      fabFilters?.classList.add('flex');
      matFilters?.classList.remove('flex');
      matFilters?.classList.add('hidden');
      currentSection = fabSection;
    } else {
      matTab?.setAttribute('data-active', 'true');
      fabTab?.setAttribute('data-active', 'false');
      matSection?.classList.remove('hidden');
      fabSection?.classList.add('hidden');
      matFilters?.classList.remove('hidden');
      matFilters?.classList.add('flex');
      fabFilters?.classList.remove('flex');
      fabFilters?.classList.add('hidden');
      currentSection = matSection;
    }

    // Clear search input when switching tabs
    if (searchInput) {
      searchInput.value = '';
    }

    filterItems();
  }

  // Category filtering
  document.querySelectorAll('.category-filter').forEach(button => {
    button.addEventListener('click', (e) => {
      const target = e.target as HTMLButtonElement;
      const category = target.getAttribute('data-category') || 'all';
      
      // Update active state
      target.closest('div')?.querySelectorAll('.category-filter').forEach(btn => {
        btn.setAttribute('data-active', 'false');
      });
      target.setAttribute('data-active', 'true');

      filterItems();
    });
  });

  // Search functionality
  const searchInput = document.getElementById('portfolio-search') as HTMLInputElement;
  searchInput?.addEventListener('input', () => {
    if (searchTimeout) clearTimeout(searchTimeout);
    searchTimeout = setTimeout(filterItems, 300);
  });

  function filterItems() {
    if (!currentSection) return;

    const searchTerm = searchInput?.value.toLowerCase() || '';
    // Update how we get the selected category based on which tab is active
    const activeFilters = document.getElementById(
      currentSection.id === 'fabrication-section' ? 'fab-filters' : 'mat-filters'
    );
    const selectedCategory = activeFilters?.querySelector('.category-filter[data-active="true"]')?.getAttribute('data-category') || 'all';
    let visibleCount = 0;

    const items = currentSection.querySelectorAll('a');
    items.forEach(item => {
      const title = item.querySelector('h3')?.textContent?.toLowerCase() || '';
      const description = item.querySelector('p')?.textContent?.toLowerCase() || '';
      const category = item.getAttribute('data-category');
      
      const matchesSearch = title.includes(searchTerm) || description.includes(searchTerm);
      const matchesCategory = selectedCategory === 'all' || category === selectedCategory;

      if (matchesSearch && matchesCategory) {
        item.classList.remove('hidden');
        visibleCount++;
      } else {
        item.classList.add('hidden');
      }
    });

    // Show/hide no results message
    const noResults = document.getElementById('no-results');
    if (noResults) {
      noResults.classList.toggle('hidden', visibleCount > 0);
    }
  }
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style> 